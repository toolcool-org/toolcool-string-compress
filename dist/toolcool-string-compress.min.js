/* 
Tool Cool String Compression 
Version: 1.0.0
Documentation: https://github.com/toolcool-org/toolcool-string-compress
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var w=t=>{var c;let r=new Map,o=[],e=new TextEncoder,l=e.encode(t),s=l.length,n=0;for(;n<s;){let u=l[n];if(r.has(u)){let a=(c=r.get(u))!=null?c:0,h=n,b=n-a,i=[];for(;t[a]===t[h]&&h<s;)i.push(l[h]),a++,h++;let g=`<${b},${i.length}>`;if(i.length>g.length){let p=e.encode(g);o.push(...p)}else o.push(...i);n+=i.length}else r.set(u,n),o.push(u),n++}return new TextDecoder().decode(new Uint8Array(o))},m=w;var T=(t,r,o,e)=>{let l="",s=r-o;if(o<e){let n=t[s];l+=n.repeat(e)}else{let n=Math.min(s+e,t.length);for(let c=s;c<n;c++)l+=t[c]}return l},d=(t,r)=>{let o="",e=r;for(;Number.isInteger(Number(t[e]))&&e<t.length;)o+=t[e],e++;return o},C=t=>{let r="",o=t.length,e=0;for(;e<o;){let l=t[e];if(l==="<"){let s=d(t,e+1),n="",c=s.length>0&&Number.isInteger(Number(s));if(c&&(n=d(t,e+s.length+2),c=n.length>0&&Number.isInteger(Number(n))),!c)r+=l,e++;else{let u=T(t,e,Number(s),Number(n));r+=u,e+=s.length+n.length+3}}else r+=l,e++}return r},f=C;window.TCEncoder=m;window.TCDecoder=f;})();
//# sourceMappingURL=toolcool-string-compress.min.js.map
